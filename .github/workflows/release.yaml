name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  release:
    types: [published]

defaults:
  run:
    shell: bash -euo pipefail {0}

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract changelog section for this release
        id: changelog_section
        run: |
          VERSION="${GITHUB_REF_NAME}"
          echo "Extracting changelog for $VERSION..."

          # Use awk to grab section from the version header to the next version header (or end of file)
          SECTION=$(awk "/^## ${VERSION}$/,/^## v[0-9]+\.[0-9]+\.[0-9]+/" CHANGELOG.md | head -n -1)

          if [ -z "$SECTION" ]; then
            echo "::error::No changelog section found for $VERSION in CHANGELOG.md"
            exit 1
          fi

          echo "$SECTION" > RELEASE_BODY.md
          echo "âœ… Extracted changelog section:"
          cat RELEASE_BODY.md

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          bodyFile: RELEASE_BODY.md
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-pypi:
    runs-on: ubuntu-latest
    # needs: create-release
    environment:
      name: pypi
      url: https://pypi.org/p/scatlastb-utils
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          cache-dependency-glob: pyproject.toml

      - name: Build package
        run: uv build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
